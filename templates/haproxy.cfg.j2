global
  log /dev/log  local0
  log /dev/log  local1 notice
{% if haproxy_socket != '' %}
  stats socket {{ haproxy_socket }} level admin
{% endif %}
{% if haproxy_chroot != '' %}
  chroot {{ haproxy_chroot }}
{% endif %}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
{% if haproxy_version == '1.4' %}
        contimeout 5000
        clitimeout 50000
        srvtimeout 50000
{% else %}
        timeout connect 5000
        timeout client 50000
        timeout server 50000
{% endif %}
{% if ansible_os_family == 'Debian' %}
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http
{% endif %}
{% if haproxy_admin_port is defined %}
listen admin
    bind {{ haproxy_admin_bind_address }}:{{ haproxy_admin_port }}
    mode http
    stats enable
    balance
{% endif %}
{% if haproxy_stats_port is defined %}
listen stats
    bind {{ haproxy_stats_bind_address }}:{{ haproxy_stats_port }}
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri {{ haproxy_stats_uri }}
{% endif %}

{% for frontend in haproxy_frontends %}
frontend {{ frontend['name'] }}
    bind {{ frontend['bind_address'] }}:{{ frontend['port'] }}
    mode {{ frontend['mode'] }}
{% if frontend.has_key('acls') %}{% for acl in frontend['acls'] %}
    acl {{ acl['name'] }} {{ acl['criterion'] }} {% if acl.has_key('converters') %}{{ acl['converters'] }}{% endif %}{% if acl.has_key('flags') %} {{ acl['flags'] }}{% endif %}{% if acl.has_key('patterns') %}{% for pattern in acl['patterns'] %} {{ pattern }} {% endfor %} {% endif %}
{% endfor %}{% endif %}

{% if frontend.has_key('conditions') %}{% for condition in frontend['conditions'] %}
    {{ condition['action'] }} {{ condition['operator'] }} {% for acl in condition['acls'] %}{{ acl }} {% endfor %}
{% endfor %} {% endif %}

{% if frontend.has_key('default') %}
    default_backend {{ frontend['default'] }}
{% endif %}

{% endfor %}
{% for backend in haproxy_backends %}
backend {{ backend['name'] }}
    mode {{ backend['mode'] }}
    balance {{ backend['balance_method'] }}
    option forwardfor
{% if backend.has_key('httpchk') and backend['httpchk'] != '' %}
    option httpchk {{ backend['httpchk'] }}
{% endif %}
{% if haproxy_version|float >= 1.6 %}
{% if backend.has_key('acls') and backend.has_key('conditions') %}
{% for acl in backend['acls'] %}
    acl {{ acl['name'] }} {{ acl['var'] }} -m {{ acl['module'] }} {{ acl['query'] }}
{% endfor %}
{% for condition in backend['conditions'] %}
    {{ condition['action'] }} {{ condition['operator'] }} {{ condition['acl']}}
{% endfor %}
{% endif %}
{% endif %}
    cookie SERVERID insert indirect
{% for server in backend['servers'] %}
    server {{ server['name'] }} {{ server['address'] }} cookie {{ server['name'] }} check {{ server['options'] }}
{% endfor %}
{% endfor %}
